<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.hangulo.powercontact" >

    <!--
         The ACCESS_COARSE/FINE_LOCATION permissions are not required to use
         Google Maps Android API v2, but you must specify either coarse or fine
         location permissions for the 'MyLocation' functionality. 
    -->
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" /> <!-- find my location -->
    <uses-permission android:name="android.permission.READ_CONTACTS" /> <!-- read contacts -->
    <uses-permission android:name="android.permission.GET_ACCOUNTS" /> <!-- read account -->

    <uses-permission android:name="android.permission.READ_PROFILE" /> <!-- read account -->
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" /> <!-- check intenet connection -->
    <uses-permission android:name="android.permission.INTERNET" /> <!-- for analytics -->

    <uses-permission android:name="android.permission.WAKE_LOCK" />    <!-- Optional permission for reliable local dispatching on non-Google Play devices -->

    <application
        android:name="AnalyticsApplication"
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:supportsRtl="true"
        android:launchMode="singleTask"
        android:theme="@style/AppMainTheme" >
        <!-- Layout mirroring  http://android-developers.blogspot.kr/2013/03/native-rtl-support-in-android-42.html-->
        <!--
             The API key for Google Maps-based APIs is defined as a string resource.
             (See the file "res/values/google_maps_api.xml").
             Note that the API key is linked to the encryption key used to sign the APK.
             You need a different API key for each encryption key, including the release key that is used to
             sign the APK for publishing.
             You can define the keys for the debug and release targets in src/debug/ and src/release/. 
        -->
        <meta-data
            android:name="com.google.android.geo.API_KEY"
            android:value="@string/google_maps_key" />
<!-- google analytics -->
        <!-- https://developers.google.com/android/reference/com/google/android/gms/analytics/GoogleAnalytics-->
        <!-- Add the following meta-data for devices running Google Play service. -->
        <meta-data
            android:name="com.google.android.gms.version"
            android:value="@integer/google_play_services_version" />
        <!-- Optionally, register AnalyticsReceiver and AnalyticsService to support background
                dispatching on non-Google Play devices -->
        <receiver android:name="com.google.android.gms.analytics.AnalyticsReceiver"
            android:enabled="true">
            <intent-filter>
                <action android:name="com.google.android.gms.analytics.ANALYTICS_DISPATCH" />
            </intent-filter>
        </receiver>
        <service android:name="com.google.android.gms.analytics.AnalyticsService"
            android:enabled="true"
            android:exported="false"/>

        <!-- Optionally, register CampaignTrackingReceiver and CampaignTrackingService to enable
             installation campaign reporting -->
        <receiver android:name="com.google.android.gms.analytics.CampaignTrackingReceiver"
            android:exported="true">
            <intent-filter>
                <action android:name="com.android.vending.INSTALL_REFERRER" />
            </intent-filter>
        </receiver>
        <service android:name="com.google.android.gms.analytics.CampaignTrackingService" />

<!-- activity -->
        <activity
            android:name=".MainActivity"
            android:label="@string/title_activity_main"
            android:theme="@style/AppMainTheme">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity
        android:name=".ErrorContactsListActivity"
        android:label="@string/title_error_contacts_list"
        android:theme="@style/AppSubTheme"
        android:parentActivityName=".MainActivity" >
        <meta-data
            android:name="android.support.PARENT_ACTIVITY"
            android:value=".MainActivity" />
        </activity>

        <activity
            android:name=".SettingsActivity"
            android:label="@string/title_activity_settings"
            android:theme="@style/SettingsTheme"
            android:parentActivityName=".MainActivity" >
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value=".MainActivity" />
        </activity>

        <service
            android:name=".service.FetchPowerAddressIntentService"
            android:exported="false"/>

        <provider
            android:name=".data.PowerContactProvider"
            android:authorities="@string/content_authority"
            android:exported="false"
            android:syncable="true" />
    <!-- Widget -->
        <receiver
            android:name=".widget.PowerContactWidgetProvider"
            android:label="@string/title_widget_powercontact" >
            <intent-filter>
                <action android:name="android.appwidget.action.APPWIDGET_UPDATE" />
                <action android:name="com.example.android.sunshine.app.ACTION_DATA_UPDATED" />
            </intent-filter>
            <meta-data android:name="android.appwidget.provider"
                       android:resource="@xml/widget_info_powercontact" />
        </receiver>
        <service android:name=".widget.PowerContactWidgetIntentService" />
    </application>

</manifest>
